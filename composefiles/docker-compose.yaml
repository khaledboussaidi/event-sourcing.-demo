version: '3.3'
services:

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        ports:
            - 2181:2181
        container_name: "zookeeper"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
    kafka:
            image: confluentinc/cp-kafka:latest
            ports:
                - 9092:9092
            depends_on:
                - zookeeper
            container_name: "kafka"
            environment:
                KAFKA_BROKER_ID: 1
                KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
                # For more details see See https://rmoff.net/2018/08/02/kafka-listeners-explained/
                KAFKA_LISTENERS: LISTENER_INSIDE://0.0.0.0:29092,LISTENER_HOST://0.0.0.0:9092
                KAFKA_ADVERTISED_LISTENERS: LISTENER_INSIDE://kafka:29092,LISTENER_HOST://localhost:9092
                KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INSIDE:PLAINTEXT,LISTENER_HOST:PLAINTEXT
                KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INSIDE
                KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
                KAFKA_HEAP_OPTS: " -Xmx256m -Xms256m"

    database:
      image: "postgres" # use latest official postgres version
      env_file:
        - database.env # configure postgres
      container_name: "postgres"
      volumes:
        - database-data:/var/lib/postgresql/data/ # persist data even if container shuts down
      ports:
            - 5432:5432

    mongodb:
        image: mongo:latest
        container_name: "mongodb"
        environment:
          - MONGO_DATA_DIR=/data/db
          - MONGO_LOG_DIR=/dev/null
        volumes:
          - ./data/db:/data/db
        ports:
            - 27017:27017
volumes:
  database-data: # named volumes can be managed easier using docker-compose